https://wokwi.com/projects/335608754889294419  (Blink an LED)

1.https://wokwi.com/projects/333715410055594580  (3LED)

RGB LED:(with REGISTER)
2.https://wokwi.com/projects/333800186223526484

RGB :
3.https://wokwi.com/projects/333804680383562322  (starting with red green and blue)

4.https://wokwi.com/projects/322062421191557714  (hello wokwi)



5.https://wokwi.com/projects/334980856741364308  (servo motar clocktype)
https://wokwi.com/projects/334980883657261652  (servometer1)



#include <Servo.h>
Servo servo;
int potpin=A0; //Analog pin used to connect Potentiometer 
int val;
void setup()
{
  servo.attach(11);   //Servo attached to pin 11
}
void loop()
{
  val=analogRead(potpin);    //Reads theb value of PM(from 0 to 1023)
  val=map(val,A0,1023,0,180); //A0,1023(8 bit reference ) for PM. 0-180 for servo
  servo.write(val);
  delay(15);  //waits for the servo to get there
}



6.https://wokwi.com/projects/334982136325997140  (potentiometer)

7.https://wokwi.com/projects/335065072543990354  (buzzor+registor)

8.https://wokwi.com/projects/335068937651749459  (buzzor+registor+button)

https://wokwi.com/projects/335072279767548499  (ultrasonic)   
9.https://wokwi.com/projects/335071539262128722  (ultrasonik(abhi))
10.https://wokwi.com/projects/335605344348668500  (ultrasonic with buzzor)
11.https://wokwi.com/projects/335610819506078291   (Ultrasonic+buzzor+led+resistor)

12.https://wokwi.com/projects/335616319247352402  (two ultra sonic)

13.https://wokwi.com/projects/336873560120230483  (potentiometer with led)
14.https://wokwi.com/projects/336873643743117906   (potentiometer with push button)
15.https://wokwi.com/projects/336967885986464339  (ESP32 )
16.https://wokwi.com/projects/337605556909900371 (LCD+DHT22)
17.https://wokwi.com/projects/340775764469219922 - LED_CHASER
18.https://wokwi.com/projects/340776572602548818 - LDR
19.https://wokwi.com/projects/340776926585029204 - LDR_LED


HARDWARE

ULTRASONIC:

const int trigPin = D5;    
const int echoPin = D6;
// defines variables
long duration;
int distance;
float inch;
void setup() {
  pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin, INPUT); // Sets the echoPin as an Input
  Serial.begin(9600); // Starts the serial communication
}
void loop() {
  // Clears the trigPin
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration = pulseIn(echoPin, HIGH);
  // Calculating the distance
  distance = duration * 0.034 / 2;
  // Prints the distance on the Serial Monitor
  inch = distance / 2.54;
  Serial.print("Distance: ");
  Serial.print(distance);
  Serial.println(" cm ");
  Serial.print("Inch    : ");
  Serial.print(inch);
  Serial.println(" inches ");
  delay(500);
}


DHT11
#include <Adafruit_Sensor.h>
    #include <DHT.h>;
    #define DHTPIN D7   // what pin we're connected to
    #define DHTTYPE DHT11   // DHT 22  (AM2302)
    DHT dht(DHTPIN, DHTTYPE); //// Initialize DHT sensor for normal 16mhz Arduino
    //Variables
    int chk;
    float hum;  //Stores humidity value
    float temp; //Stores temperature value
    void setup()
    {
      Serial.begin(9600);
      dht.begin();
    }
    void loop()
   {
       delay(2000);
       //Read data and store it to variables hum and temp
       hum = dht.readHumidity();
       temp= dht.readTemperature();
       //Print temp and humidity values to serial monitor
       Serial.print("Humidity: ");
       Serial.print(hum);
       Serial.print(" %, Temp: ");
       Serial.print(temp);
       Serial.println(" Celsius");
       delay(1000); //Delay 2 sec.
   }








